name: website deploy


on:
  workflow_dispatch:
    inputs:
      choice:
        type: choice
        description: Deploy to production or test slot
        options: 
        - Production
        - test-slot


defaults:
  run:
    working-directory: ./src/



jobs:
  # build-container-image:
  #   runs-on: self-hosted
   
  #   env:
  #     ARM_CLIENT_ID: ${{secrets.TF_ARM_CLIENT_ID}}
  #     ARM_CLIENT_SECRET: ${{secrets.TF_ARM_CLIENT_SECRET}}
  #     ARM_SUBSCRIPTION_ID: ${{secrets.TF_ARM_SUBSCRIPTION_ID}}
  #     ARM_TENANT_ID: ${{secrets.TF_ARM_TENANT_ID}}

  #   steps:
  #   - name: 'Checkout GitHub Action'
  #     uses: actions/checkout@main

  #   - name: 'Build and Push Image to ACR'
  #     uses: azure/docker-login@v1
  #     with:
  #       login-server: WebPageContainerRegistry.azurecr.io
  #       username: ${{secrets.TF_ARM_CLIENT_ID}}
  #       password: ${{secrets.TF_ARM_CLIENT_SECRET}}
  #   - run: |
  #       docker build . -t WebPageContainerRegistry.azurecr.io/test:${{ github.sha }}
  #       docker push WebPageContainerRegistry.azurecr.io/test:${{ github.sha }}

  deploy-to-web-app:
    #needs: build-container-image
    runs-on: self-hosted
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@main
      
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Get App Name'
      id: getwebappname
      run: |
        a=$(az webapp list --query '[].{Name:name}' -o tsv)
        echo "::set-output name=appName::$a"        

    - name: Webapp Deploy
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ steps.getwebappname.outputs.appName }}
        slot-name: '${{ github.event.inputs.choice }}'
        package: './src/'                                           
